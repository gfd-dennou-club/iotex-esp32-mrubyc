#概要 summruy

=begin JA
SWを利用した加算器です。
SW1の入力を切り替えると+1
SW2の入力を切り替えると-1
SW3の入力を切り替えると符号が変わります。
SW4の入力を切り替えると0になります。
計算範囲は127 ~ -128
=end JA

=begin EN
This is an adder that uses SW.
When the input of SW1 is switched, +1 is added.
Switching the input of SW2 changes the sign to -1.
Switching the SW3 input will change the sign.
When the SW4 input is switched, it becomes 0.
Calculation range is 127 ~ -128
=end EN


def calcBinary(num)
    isLightUp = [0,0,0,0,0,0,0,0]
    buf = num
    if num < 0
        buf *= -1
    end
    for i in 0..7
        if buf / 2.0 > 0.0
            isLightUp[i] = buf % 2
        else
            isLightUp[i] = 0
        end
        buf /= 2
        buf = buf.to_i
    end
    if num < 0
        for i in 0..7
            if isLightUp[i] == 0
                isLightUp[i] = 1
            else
                isLightUp[i] = 0
            end  
        end 
        for i in 0..7
            if isLightUp[i] == 0
                isLightUp[i] = 1
                break
            else
                isLightUp[i] = 0
            end
        end
    end
    return isLightUp
end
               
def lightUp(led,num)
    isLightUp = calcBinary(num)
   
    for i in 0..7
        if isLightUp[i] == 1
            led[7-i].write(1)
        else
            led[7-i].write(0)
        end 
    end
end

led_number = [13,12,14,27,26,25,33,32]
button_number = [34,35,18,19]
button_num_PU = [18,19]
button_num_NoPU = [34,35]
led = []
button = []

for num in led_number
    led.push(GPIO.new(num,GPIO::OUT))
end
for num in button_num_NoPU
    button.push(GPIO.new(num,GPIO::IN))
end
for num in button_num_PU
    button.push(GPIO.new(num,GPIO::IN,GPIO::PULL_UP))
end

current_number = 0
button_state = [0,0,0,0]
before_button_state = [0,0,0,0]
while true
  for i in 0..3
    before_button_state[i] = button_state[i]
    button_state[i] = button[i].read
  end
  for i in 0..3
    if button_state[i] != before_button_state[i]
      if button_state[i] == 1
        if i == 0
           current_number+=1
        end
        if i == 1
           current_number-=1
        end
        if i == 2
           current_number*=-1
        end
        if i == 3
           current_number = 0
        end 
      end
    end
  end
  if current_number > 127
     current_number = 127
  end
  if current_number < -128
     current_number = -128
  end
  print current_number
  lightUp(led,current_number)
  sleep 0.1
end
