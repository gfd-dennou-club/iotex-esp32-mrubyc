if SDSPI.spi_bus_initialize(23, 19, 18) # Passing MOSI, MISO, CLOCK
  if SDSPI.esp_vfs_fat_sdspi_mount(5, "/sdcard") # Passing ChipSelect, MountPoint
    # TEST Deleting files, delete the file of given file name.
    ESP32_STDIO.remove("/sdcard/bar.txt")
    ESP32_STDIO.remove("/sdcard/piyo.txt")

    # TEST Opening open.txt.
    puts "open foo.txt"
    # Open with fopen. r is read mode, pass file name and mode.
    fid = ESP32_STDIO.fopen("/sdcard/foo.txt", "r")
    # Reading contents of file with fgets, second argument is maximum length of reading.
    cont = ESP32_STDIO.fgets(fid, 64)
    puts cont
    # Closing file with fclose.
    ESP32_STDIO.fclose(fid)

    # TEST Creating bar.txt and write in.
    puts "\nHey, create bar.txt and write down"
    # w is write mode
    fid = ESP32_STDIO.fopen("/sdcard/bar.txt", "w")
    # Writing in with fputs.
    ESP32_STDIO.fputs(fid, "Hello mruby/c!")
    # fputc writes only first character.
    ESP32_STDIO.fputc(fid, "?")
    ESP32_STDIO.fclose(fid)

    # TEST Renaming files.
    puts "\nYo! rename bar.txt to piyo.txt and read it!"
    # rename bar.txt to piyo.txt
    ESP32_STDIO.rename("/sdcard/bar.txt", "/sdcard/piyo.txt")

    # Check piyo.txt is available.
    fid = ESP32_STDIO.fopen("/sdcard/piyo.txt", "r")
    # Should print "Hello mruby/c!?"
    cont =ESP32_STDIO.fgets(fid,64)

    # TEST Seeking
    puts "\n Let's fseek!"
    # Moving cursor to 5th character(It's 4 counting from 0). Second argument, 0 is from-head, 1 is from-cursor, 2 is from-last.
    ESP32_STDIO.fseek(fid, 4, 0)
    # Where is current position?(should 4)
    pos = ESP32_STDIO.fgetpos(fid)
    puts "position is ", pos
    puts "\n fgetc, Yah!"
    # Should print 'o', it's 5th character of 'Hello'.
    puts ESP32_STDIO.fgetc(fid)
    puts cont
    ESP32_STDIO.fclose(fid)

    # Let's enumearate child directories and files.
    puts "\nGet ls /sdcard!"
    ls = ESP32_DIRENT.children("/sdcard")
    p ls

    # Let's check created date of file.
    puts "\nWhen created? Check it now!"
    t = ESP32_DIRENT.fileTime("/sdcard/piyo.txt")
    puts "Year:", t.getYear()
    puts "Month:", t.getMonth()
    
    # Clear up.
    SDSPI.esp_vfs_fat_sdcard_unmount()

  else
    puts "vfat mount error"
  end
  SDSPI.spi_bus_free()
else
  puts "bus initialize error"
end

while true
  puts "hello world from ESP32"
  sleep 100
end
